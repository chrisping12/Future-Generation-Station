Yes! A Seaborn pairplot is a great way to visualize all pairwise relationships between your top features with colored class labels, and it’s much simpler and visually intuitive than generating separate decision boundary plots for each pair.

Here’s a drop-in script that:
	•	Loads your predictions_with_pysr.csv
	•	Adds a classification target column (e.g., PTS >= 25)
	•	Selects your top 5 features
	•	Uses sns.pairplot() to show relationships between all combinations, color-coded by class (25+ PTS vs <25 PTS)
	•	Saves the plot to file

⸻

Drop-in Code: Pairplot for Top 5 Features

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import os

# Load CSV
df = pd.read_csv('predictions_with_pysr.csv')

# Classification target: Did player score 25+ points?
df['PTS_25_plus'] = (df['PTS'] >= 25).astype(int)

# Choose your top 5 features for visualization
top_features = [
    'rolling_pts_avg_5G',
    'rolling_3pm_avg_5G',
    'rolling_usg_pct_5G',
    'pts_trend_slope_5G',
    'shots_per_min'
]

# Create a DataFrame with just the top features and target
plot_df = df[top_features + ['PTS_25_plus']].dropna()

# Create pairplot
sns.set(style='darkgrid')
pairplot = sns.pairplot(
    plot_df,
    hue='PTS_25_plus',
    palette='coolwarm',
    diag_kind='kde',
    plot_kws={'alpha': 0.6}
)

# Save the figure
output_path = 'decision_boundaries/pairplot_top_features.png'
os.makedirs(os.path.dirname(output_path), exist_ok=True)
pairplot.fig.suptitle('Pairplot of Top 5 Features (25+ PTS Classification)', y=1.02)
pairplot.savefig(output_path)
plt.close()

print(f"Pairplot saved to: {output_path}")



⸻

Optional Enhancements:
	•	Change PTS_25_plus to PTS_30_plus or a different threshold.
	•	Replace diag_kind='kde' with 'hist' for bar-style diagonals.
	•	If you want to add pysr_prediction as a hue or a third axis — we can do a 3D pairplot approximation or use faceting instead.

Want the same idea but embedded in a Jupyter notebook cell? I can rewrite it that way too.