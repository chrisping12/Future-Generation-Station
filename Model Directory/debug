import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import os
from sklearn.linear_model import LogisticRegression
from sklearn.preprocessing import StandardScaler
from sklearn.inspection import DecisionBoundaryDisplay
from itertools import combinations

# Load and label
df = pd.read_csv('predictions_with_pysr.csv')
df['PTS_25_plus'] = (df['PTS'] >= 25).astype(int)

# Define the pairs to visualize (manually or auto from top features)
interesting_pairs = [
    ('rolling_pts_avg_5G', 'rolling_usg_pct_5G'),
    ('shots_per_min', 'pts_per_min'),
    ('rolling_3pm_avg_5G', 'pts_to_3pm_ratio')
]

output_dir = 'decision_boundaries'
os.makedirs(output_dir, exist_ok=True)

for i, (feat1, feat2) in enumerate(interesting_pairs):
    print(f"[{i+1}] Plotting {feat1} vs {feat2}...")

    # Drop missing and extract clean set
    sub_df = df[[feat1, feat2, 'PTS_25_plus']].dropna()
    X = sub_df[[feat1, feat2]].values
    y = sub_df['PTS_25_plus'].values

    # Normalize for clean decision boundaries
    scaler = StandardScaler()
    X_scaled = scaler.fit_transform(X)

    # Fit a simple classifier
    clf = LogisticRegression()
    clf.fit(X_scaled, y)

    # Plot decision boundary
    disp = DecisionBoundaryDisplay.from_estimator(
        clf,
        X_scaled,
        response_method="predict",
        xlabel=feat1,
        ylabel=feat2,
        alpha=0.4
    )
    scatter = disp.ax_.scatter(X_scaled[:, 0], X_scaled[:, 1], c=y, cmap='coolwarm', edgecolor='k', s=25)
    disp.ax_.set_title(f"{feat1} vs {feat2} | 25+ PTS Boundary")

    # Save plot
    plot_path = os.path.join(output_dir, f'decision_boundary_{feat1}_vs_{feat2}.png')
    plt.savefig(plot_path)
    plt.close()

print(f"\n[âœ“] All decision boundary plots saved to: {output_dir}")