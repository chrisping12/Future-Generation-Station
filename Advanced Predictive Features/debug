I want to ensure these features inside the class function calculate_rolling_features()

rolling_opp_blocks_5g = get_team_rolling_avg(opp_team_id, current_game['GAME_DATE'], 'TEAM_BLK')
rolling_opp_steals_5g = get_team_rolling_avg(opp_team_id, current_game['GAME_DATE'], 'TEAM_STL')
rolling_opp_fouls_5g = get_team_rolling_avg(opp_team_id, current_game['GAME_DATE'], 'TEAM_PF')

are actually using the 5G avg (up to the current game) of the blocks, steals, and fouls 

Here is the block... 

# Team IDs
opp_abbrev = current_game['MATCHUP'].split(' ')[-1]
player_team_abbrev = current_game['MATCHUP'].split(' ')[0]
opp_team_id = self.team_abbrev_to_id.get(opp_abbrev)
player_team_id = self.team_abbrev_to_id.get(player_team_abbrev)
usg_pct_current = current_game.get('USG_PCT', np.nan)

# Team-level rolling stats
rolling_opp_def_5g = get_team_rolling_avg(opp_team_id, current_game['GAME_DATE'], 'TEAM_DEF_RATING')
rolling_opp_blocks_5g = get_team_rolling_avg(opp_team_id, current_game['GAME_DATE'], 'TEAM_BLK')
rolling_opp_steals_5g = get_team_rolling_avg(opp_team_id, current_game['GAME_DATE'], 'TEAM_STL')
rolling_opp_fouls_5g = get_team_rolling_avg(opp_team_id, current_game['GAME_DATE'], 'TEAM_PF')
